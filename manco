#!/bin/bash
# Run this from macOS Recovery (Utilities > Terminal).
# It will:
#  1) Count internal, physical disks.
#     - If exactly 1, erase it APFS named "Macintosh HD".
#     - If 2 or more, assume a Fusion pair and run diskutil resetFusion (auto-confirm "Yes").
#  2) Show system information (with optional QR output).
#  3) Run /Volumes/MDS/1561oem_nocheck.sh

set -e

log(){ /bin/echo "[$(/bin/date '+%F %T')] $*"; }

DISKUTIL="/usr/sbin/diskutil"
AWK="/usr/bin/awk"
SED="/usr/bin/sed"
PRINTF="/usr/bin/printf"
BASH="/bin/bash"

TARGET_NAME="Macintosh HD"
POST_SCRIPT="/Volumes/MDS/157oem_nocheck.sh"

# --- Discover internal, physical disks ---
internal_list="$($DISKUTIL list | $AWK '/\(internal, physical\)/ {print $1}')"
count_internal="$(/bin/echo "$internal_list" | /usr/bin/grep -c '^/dev/disk' || true)"

log "Found $count_internal internal, physical disk(s)."

if [ "${count_internal:-0}" -eq 1 ]; then
  disk_dev="$(/bin/echo "$internal_list" | /usr/bin/head -n1)"
  log "Erasing single internal disk: $disk_dev -> APFS \"$TARGET_NAME\""
  $DISKUTIL eraseDisk APFS "$TARGET_NAME" "$disk_dev"
elif [ "${count_internal:-0}" -ge 2 ]; then
  log "Multiple internal physical disks detected; attempting Fusion reset."
  $PRINTF 'Yes\n' | $DISKUTIL resetFusion
else
  log "No internal physical disks detected â€” nothing to do."
fi

/bin/sleep 2

# ===================== System Information block =====================
/bin/echo "***************************************************"
/bin/echo "* System Information                              *"
/bin/echo "***************************************************"

case "$0" in
  /*) script_path="$0" ;;
  *)  script_path="$PWD/$0" ;;
esac
dir="$(/usr/bin/dirname "$script_path")"

model_id=$(sysctl hw.model | sed "s/.*: \(.*\)/\1/g")
cpu=$(sysctl machdep.cpu.brand_string | sed "s/.*: \(.*\)/\1/g" | sed "s/Intel.*(TM) //g" | sed "s/ CPU @ /-/g" | tr ',' '.')
hardware_memory=$(($(sysctl -n hw.memsize)/1024/1024/1024))
first_physical_disk_size=$(diskutil list physical | awk '/GUID_partition_scheme/ {print $0; exit}' | sed "s/.*GUID_partition_scheme[^0-9]\{1,\}\([0-9]\{1,\}\)\.[0-9]\{1,\} \([A-Za-z]\{1,\}\).*/\1 \2/")
serial=$(ioreg -rd1 -c IOPlatformExpertDevice | awk -F'"' '/IOPlatformSerialNumber/{print $4}')

qrcode_info="$model_id | $cpu | $hardware_memory GB | $first_physical_disk_size | $serial"

if [ ! -x "$QR" ]; then
  curl -Ls -o "$QR" "https://raw.githubusercontent.com/alfonsomri/mac-scripts/refs/heads/main/qrencode"
  chmod +x "$QR"
fi
if [ -x "$QR" ]; then
  echo "Scan QR for machine-readable: \"${qrcode_info}\""
  echo "${qrcode_info}" | "$QR" -t ANSI256UTF8 -m 1
else
  echo "WARNING: qrencode not found; skipping QR code output." >&2
fi

/bin/echo "Model Identifier: ${model_id}"
/bin/echo "Disk Size: ${first_physical_disk_size}"
/bin/echo "CPU: ${cpu}"
/bin/echo "RAM: ${hardware_memory}"
/bin/echo "Serial Number: ${serial}"
/bin/echo "Current Boot Environment: $(sw_vers -productVersion)"
/bin/echo "***************************************************"
/bin/echo
/bin/echo
# =================== End System Information block ===================

# --- Run the follow-up script from the MDS volume ---
if [ -e "$POST_SCRIPT" ]; then
  log "Running $POST_SCRIPT"
  if [ -x "$POST_SCRIPT" ]; then
    "$POST_SCRIPT"
  else
    $BASH "$POST_SCRIPT"
  fi
  log "Post script completed."
else
  log "WARNING: $POST_SCRIPT not found. Skipping."
fi

log "All done."
